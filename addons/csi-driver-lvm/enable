#!/usr/bin/env bash

set -e

source $SNAP/actions/common/utils.sh

NAMESPACE_CSI_DRIVER_LVM="csi-driver-lvm"

CSI_DRIVER_LVM_HELM_VERSION="0.5.2"

"$SNAP/microk8s-enable.wrapper" helm3

KUBECTL="$SNAP/microk8s-kubectl.wrapper"
HELM="$SNAP/microk8s-helm3.wrapper"

PATTERN=""

# get the options
while getopts ":v:p:h:" flag; do
  case "${flag}" in
          v) CSI_DRIVER_LVM_HELM_VERSION=${OPTARG}
             ;;
          p) PATTERN=${OPTARG}
             ;;
          *) echo "Usage: microk8s enable csi-driver-lvm"
             echo ""
             echo "With overwriting default values: microk8s enable csi-driver-lvm -p /dev/sdb"
             exit 0
             ;;
  esac
done

echo "Installing csi-driver-lvm (Helm v${CSI_DRIVER_LVM_HELM_VERSION})"

if [ -n "$PATTERN" ]; then
    echo "Using pattern: $PATTERN"
fi


# make sure the "csi-driver-lvm" namespace exists
$KUBECTL create namespace "$NAMESPACE_CSI_DRIVER_LVM" > /dev/null 2>&1 || true

# add the csi-driver-lvm chart repository
$HELM repo add metal-stack https://helm.metal-stack.io

# install the helm chart
if [ -z "$PATTERN" ]
then
    $HELM upgrade -i csi-driver-lvm metal-stack/csi-driver-lvm \
      --version $CSI_DRIVER_LVM_HELM_VERSION \
      --namespace "$NAMESPACE_CSI_DRIVER_LVM" \
      --set lvm.devicePattern='/dev/vdb'
else
    $HELM upgrade -i argo-cd argo/argo-cd \
      --version $CSI_DRIVER_LVM_HELM_VERSION \
      --namespace "$NAMESPACE_CSI_DRIVER_LVM" \
      --set lvm.devicePattern="$PATTERN" 
fi

echo "csi-driver-lvm is installed"
